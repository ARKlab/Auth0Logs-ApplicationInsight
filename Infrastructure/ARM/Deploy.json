{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "uniquePrefixName": {
            "type": "string"
        },
        "auth0LogConnectionString": {
            "type": "string"
        },
        "sharedLawId": {
            "type": "string"
        }
    },
  "variables": {
    "location": "[resourceGroup().location]",
    "shortName": "auth0toai",
    "projectName": "Auth0ToApplicationInsight",
    "storageAccountName": "[concat(variables('shortName'), 'sa')]",
    "applicationInsightsName": "[concat(variables('shortName'), '-', 'ai')]",
    "identityName": "[concat(variables('shortName'),'-', 'id')]",
    "identityId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]",
    "auth0ToApplicationInsightFunctionName": "[concat('Fx', '-Connector-', variables('shortName'))]"
  },
    "resources": [
        {
            "name": "[variables('identityName')]",
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "location": "[resourceGroup().location]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "Auth0Log",
            "dependsOn": [ 
                "[variables('identityId')]"
            ],
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "principalId": {
                            "type": "array",
                            "minLength": 1
                        },
                        "roles": {
                            "type": "array",
                            "minLength": 1
                        }
                    },
                    "variables": {
                        "_roles": {
                            "Storage Account Contributor": "17d1049b-9a84-46fb-8f53-869881c3d3ab",
                            "Storage Account Blob Data Reader": "2a2b9908-6ea1-4ae2-8e65-a410df84e7d1",
                            "Storage Account Blob Data Owner": "b7e6dc6d-f1e8-4753-8033-0f276bb0955b",
                            "Storage Account Table Contributor": "0a9a7e1f-b9d0-4cc4-a60d-0319b160aaa3",
                            "Storage Account Queue Contributor": "974c5e8b-45b9-4653-ba55-5f855dd0fb88",
                            "Azure Service Bus Data Owner": "090c5cfd-751d-490a-894a-3ce6f1109419",
                            "Key Vault Secrets User": "4633458b-17de-408a-b874-0445c86b69e6",
                            "Key Vault Secrets Officer": "b86a8fe4-44ce-4948-aee5-eccb2c155cd7"
                        },

                        // we have 2 array [P0, P1, P2] and [R0, R1]
                        // to make the 'copy' work we have to use a single array, over their combination
                        // so the total is the mul of the 2 lens (4 principals, 3 roles) = 12
                        // Pi = mod(i, count-of-Principals=4) => [0,1,2,3,0,1,2,3,0,1,2,3]
                        // Ri = div(i, count-of-Principals=4) => [0,0,0,0,1,1,1,1,2,2,2,2]  
                        // which are all the combinations 
                        "lenPrincipalIds": "[length(parameters('principalId'))]",
                        "lenRoles": "[length(parameters('roles'))]",
                        "lenTotal": "[mul(variables('lenPrincipalIds'), variables('lenRoles'))]"
                    },
                    "resources": [
                        {
                            "copy": {
                                "count": "[variables('lenTotal')]",
                                "name": "pairs"
                            },
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2022-04-01",
                            "name": "[guid(variables('_roles')[parameters('roles')[div(copyIndex(), variables('lenPrincipalIds'))]], parameters('principalId')[mod(copyIndex(), variables('lenPrincipalIds'))])]",
                            "properties": {
                                "principalId": "[parameters('principalId')[mod(copyIndex(), variables('lenPrincipalIds'))]]",
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions',variables('_roles')[parameters('roles')[div(copyIndex(), variables('lenPrincipalIds'))]])]"
                            }
                        }
                    ]

                },
                "parameters": {
                    "principalId": {
                        "value": [
                            "[reference(variables('identityId')).principalId]"
                        ]
                    },
                    "roles": {
                        "value": [
                            "Storage Account Queue Contributor",
                            "Storage Account Blob Data Owner",
                            "Storage Account Contributor",
                            "Storage Account Table Contributor"
                        ]
                    }
                }
            }
        },
        {
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-05-01",
            "location": "[variables('location')]",
            "sku": { "name": "Standard_LRS" },
            "kind": "StorageV2",
            "properties": {
                "isHnsEnabled": true//,
                // "isLocalUserEnabled": true,
                // "isSftpEnabled": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('storageAccountName'), '/default/', variables('shortName'), 'sha')]",
             "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
            },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02",
            "name": "[variables('applicationinsightsname')]",
            "location": "[variables('location')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "WorkspaceResourceId": "[parameters('sharedLawId')]"
            }
        },
        {
            "type": "Microsoft.Insights/components/pricingPlans",
            "name": "[concat(variables('applicationinsightsname'),'/', 'Basic')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "2017-10-01",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', variables('applicationinsightsname'))]"
            ],
            "properties": {
                "cap": 1,
                "planType": "Basic",
                "warningThreshold": 90
            }
        },
      {
        "name": "[concat(parameters('uniquePrefixName'), '-', variables('projectName'), '-', 'ASP')]",
        "type": "Microsoft.Web/serverfarms",
        "apiVersion": "2022-03-01",
        "kind": "functionapp",
        "location": "[variables('location')]",
        "sku": {
          "name": "Y1"
        },
        "properties": {
          "reserved": false
        }
      },
        // Azure function app
        {  
            "name": "[variables('auth0ToApplicationInsightFunctionName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-03-01",
            "location": "[variables('location')]",
            "kind": "functionapp",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": { "[variables('identityId')]": {} }
            },
          "dependsOn": [
            "[resourceId('Microsoft.Web/serverfarms', concat(parameters('uniquePrefixName'), '-', variables('projectName'), '-', 'ASP'))]",
            "[variables('identityId')]"
          ],
          "properties": {
            "reserved": false,
            "name": "[variables('auth0ToApplicationInsightFunctionName')]",
            "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', concat(parameters('uniquePrefixName'), '-', variables('projectName'), '-', 'ASP'))]",
            "siteConfig": {
              "numberOfWorkers": 1,
              "http20Enabled": false,
              "alwaysOn": false
            },
            "httpsOnly": true,

            "keyVaultReferenceIdentity": "[variables('identityId')]"
          },
            "resources": [
                {
                    "name": "appsettings",
                    "type": "config",
                    "apiVersion": "2022-03-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('auth0ToApplicationInsightFunctionName'))]"
                    ],
                  "properties": {
                    "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('microsoft.insights/components', variables('applicationInsightsName')), '2020-02-02-preview').InstrumentationKey]",
                    "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('microsoft.insights/components', variables('applicationInsightsName')), '2020-02-02-preview').ConnectionString]",
                    "Auth0LogConnectionString": "[parameters('auth0LogConnectionString')]",
                    //"AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",
                    "AzureWebJobsStorage__clientId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))).clientId]",
                    "AzureWebJobsStorage__accountName": "[variables('storageAccountName')]",
                    "AzureWebJobsStorage__credential":"managedidentity",
                    "FUNCTIONS_EXTENSION_VERSION": "~4",
                    "FUNCTIONS_WORKER_RUNTIME": "dotnet",
                    //"WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",
                    "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING__clientId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))).clientId]",
                    "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING__accountName": "[variables('storageAccountName')]",
                    "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING__credential":"managedidentity",
                    "WEBSITE_CONTENTSHARE": "[concat(variables('shortName'), 'sha')]",
                    "WEBSITE_RUN_FROM_PACKAGE": "1"
                  }
                },                
                {
                    "type": "config",
                    "apiVersion": "2022-03-01",
                    "name": "logs",
                    "properties": {
                        "applicationLogs": {
                            "fileSystem": {
                                "level": "Warning"
                            }
                            },
                            "httpLogs": {
                            "fileSystem": {
                                "retentionInMb": 40,
                                "enabled": true
                            }
                        },
                        "failedRequestsTracing": {
                        "enabled": true
                        },
                        "detailedErrorMessages": {
                        "enabled": true
                        }
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('auth0ToApplicationInsightFunctionName'))]"
                    ]
                }
            ]
        }
    ],
  "outputs": {
    "identityName": {
      "type": "string",
      "value": "[variables('identityName')]"

    },
    "auth0ToApplicationInsightFunctionName": {
      "type": "string",
      "value": "[variables('auth0ToApplicationInsightFunctionName')]"

    }
  }
}