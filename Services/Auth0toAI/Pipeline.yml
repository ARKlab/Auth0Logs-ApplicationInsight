trigger:
 batch: true
 branches:
   include:
   - master
 paths:
   include:
   - Services/Auth0toAI
variables:
 - group: Auth0ToApplicationInsight
 - name: workingDirectory
   value: '$(Build.SourcesDirectory)/Services/Auth0toAI'
 - name: vmImageName
   value: 'windows-2022'
 - name: BuildConfiguration
   value: 'release'
 - name: BuildPlatform
   value: 'any cpu'
stages:
- stage: 'Build_Stage' #Stage name cannot have spaces
  displayName: 'Build' #Name displayed when viewing in Azure DevOps
  jobs:
  - job: 'Build_Job' #Job name cannot have spaces
    displayName: 'Build Service' #Name displayed when viewing in Azure DevOps
    pool:
      vmImage: $(vmImageName)
      demands:
      - msbuild
      - visualstudio
    variables:
      - group: Auth0ToApplicationInsight
      - name: NUGET_PACKAGES
        value: $(Pipeline.Workspace)/.nuget/packages
    steps:
    - task: NuGetToolInstaller@1
      displayName: 'Use NuGet 6.x'
      inputs:
       versionSpec: 6.x      
    - task: UseDotNet@2
      displayName: Use .Net Core sdk 6.0.x
      inputs:
        packageType: 'sdk'
        version: '6.0.x'
    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
       restoreSolution: '$(workingDirectory)/Auth0toAI.sln'
    - task: VSBuild@1
      displayName: 'Build solution'
      inputs:
       solution: '$(workingDirectory)/Auth0toAI.sln'
       vsVersion: "17.0"
       platform: '$(BuildPlatform)'
       configuration: '$(BuildConfiguration)'
       clean: true
       maximumCpuCount: true
    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish'
      inputs:
       command: publish
       publishWebProjects: false
       projects: '$(workingDirectory)/Auth0toAI/Auth0toAI.csproj'
       arguments: '-o "$(build.artifactstagingdirectory)/Auth0toAI" --configuration $(BuildConfiguration) --no-build'

    - task: Bash@3
      displayName: Install Azurite
      inputs:
       targetType: 'inline'
       script: |
         npm install -g azurite
         mkdir azurite
         azurite --silent --location azurite --debug azurite\debug.log &

    - task: PublishSymbols@2
      displayName: 'Publish symbols path'
      inputs:
       SymbolServerType: TeamServices
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'

#- ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
#- ${{ if true }}:
- stage: ProdEnv_Stage
  displayName: Prod Deploy Service
  dependsOn: Build_Stage
    #condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  jobs:
    - deployment: ProdEnv_Deploy
      displayName: 'Prod Deploy Service'
      environment: Auth0ToApplicationInsight
      variables:
      - group: Auth0ToApplicationInsight
      - name: deploymentName
        value: 'Auth0ToApplicationInsight'
      pool:
        vmImage: $(vmImageName)
      strategy:
        runOnce:
          deploy:
            steps:
            - task: ARM Outputs@6
              displayName: 'ARM Outputs'
              inputs:
                ConnectedServiceNameSelector: 'ConnectedServiceNameARM'
                ConnectedServiceNameARM: '$(azureResurceManagerConnection)'
                resourceGroupName: $(resourceGroup)
                prefix: 'arm.'
                whenLastDeploymentIsFailed: 'latestSuccesful'
                deploymentNameFilter: '$(deploymentName)*'
            - task: AzureFunctionApp@1
              displayName: 'Azure functions Scheduler Deploy'
              inputs:
                azureSubscription: '$(azureResurceManagerConnection)'
                appType: functionApp
                appName: $(arm.auth0ToApplicationInsightFunctionName)
                package: '$(Pipeline.Workspace)/drop/Auth0toAI/Auth0toAI.zip'

- stage: 'Build_ARM_Stage' #Stage name cannot have spaces
  displayName: 'Validate ARM' #Name displayed when viewing in Azure DevOps
  dependsOn: ProdEnv_Stage
  jobs:
  - job: 'Build_Job' #Job name cannot have spaces
    displayName: 'ARM Validation' #Name displayed when viewing in Azure DevOps
    variables:
    - group: Auth0ToApplicationInsight
    pool:
      vmImage: $(vmImageName)
    steps:           
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
       deploymentScope: 'Resource Group'
       azureResourceManagerConnection: '$(azureResurceManagerConnection)'
       subscriptionId: '$(subscriptionId)'
       action: 'Create Or Update Resource Group'
       resourceGroupName: $(resourceGroup)
       location: '$(location)'
       templateLocation: 'Linked artifact'
       csmFile: '$(Build.SourcesDirectory)/Services/Auth0toAI/ARM/Deploy.json'
       deploymentMode: 'Validation'
       deploymentName: 'Auth0ToApplicationInsightFunction'
       overrideParameters: >-
        -eventGridTopicName $(eventGridTopicName) -eventGridSubscriptionName $(eventGridSubscriptionName) -functionName $(functionName)

- stage: 'ProdEnv_ARM_Stage' #Stage name cannot have spaces
  dependsOn:
    - Build_ARM_Stage
  displayName: 'InfrastructureDeploy' #Name displayed when viewing in Azure DevOps
  #condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  variables:
  - group: Auth0ToApplicationInsight
  jobs:
  - deployment: 'Deploy' #Job name cannot have spaces
    displayName: 'Infrastructure' #Name displayed when viewing in Azure DevOps
    pool:
      vmImage: 'windows-2022'
    environment: Auth0ToApplicationInsight
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - task: AzureResourceManagerTemplateDeployment@3
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: '$(azureResurceManagerConnection)'
              subscriptionId: '$(subscriptionId)'
              action: 'Create Or Update Resource Group'
              resourceGroupName: $(resourceGroup)
              location: '$(location)'
              templateLocation: 'Linked artifact'
              csmFile: '$(Build.SourcesDirectory)/Services/Auth0toAI/ARM/Deploy.json'
              deploymentMode: 'Incremental'
              deploymentName: 'Auth0ToApplicationInsightFunction'
              overrideParameters: >-
                -eventGridTopicName $(eventGridTopicName) -eventGridSubscriptionName $(eventGridSubscriptionName) -functionName $(functionName)